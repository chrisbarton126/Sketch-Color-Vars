@import "functions.js"

/** Variables
 ---------------------------------------------------------*/
var app = NSApplication.sharedApplication();
var header = '/*! Sketch-Color-Vars v1.3.1 | MIT License | github.com/philsinatra/Sketch-Color-Vars/ */';
var file_path = '';
var color_array = [];
var str_scss = header + "\n";
var str_less = header + "\n";
var str_stylus = header + "\n";
var str_css = header + "\n" + ":root {";

var onRun = function(context) {
  log('test run again');
  var doc = context.document;
  var selectedLayers = context.selection;
  var selectedCount = selectedLayers.count();
	var fileTypes = NSArray.arrayWithArray([@'scss',@'less',@'css',@'styl'])
	var panel = [NSOpenPanel openPanel];
  [panel setCanChooseDirectories:true];
  [panel setCanCreateDirectories:true];
	[panel setAllowedFileTypes:fileTypes];
  panel.setPrompt('Export Color Variables');

  var clicked = [panel runModal];

  if (clicked == NSFileHandlingPanelOKButton) {
    var isDirectory = true;
    var firstURL = [[panel URLs] objectAtIndex:0];
    file_path = [NSString stringWithFormat:@'%@', firstURL];

    if (0 === file_path.indexOf('file://'))
      file_path = file_path.substring(7);
  }

  if (selectedCount == 0) {
    doc.showMessage('Please selected at least one layer.');
  } else {
    for (var i = 0; i < selectedCount; i++) {
      var layer = selectedLayers[i];
      var layer_name = layer.name();
      var color = String(firstVisibleFill(layer).color());

      color = color.replace('r:', '');
      color = color.replace('g:', '');
      color = color.replace('b:', '');
      color = color.replace('a:', '');
      color = color.replace('(', '');
      color = color.replace(')', '');

      color_array = color.split(" ");

      var red = Math.round(color_array[0] * 100) + '%';
      var green = Math.round(color_array[1] * 100) + '%';
      var blue = Math.round(color_array[2] * 100) + '%';
      var alpha = parseFloat(color_array[3]).toFixed(2);
      var rgbaValues = color_array.join(',') //red + "," + green + "," + blue + "," + alpha;

      str_scss += "$" + layer_name + ": rgba(";
      str_scss += rgbaValues;
      str_scss += "); ";
      str_scss += "\n";

      str_less += "@" + layer_name + ": rgba(";
      str_less += rgbaValues;
      str_less += "); ";
      str_less += "\n";

      str_stylus += "$";
      str_stylus += layer_name + " = rgba(";
      str_stylus += rgbaValues;
      str_stylus += "); ";
      str_stylus += "\n";

      str_css += "\n";
      str_css += "  --" + layer_name + ": rgba(";
      str_css += rgbaValues;
      str_css += "); ";
    }
  }
  str_css += "\n}";

	var output = [
		[str_scss, 'scss'],
		[str_less, 'less'],
    [str_stylus, 'styl'],
		[str_css, 'css']
	];

	for (z = 0; z < output.length; z++) {
		writeFile(output[z][0], output[z][1]);
	}

	var alertMessage = '_colors.scss | less | stylus | css saved to: ' + file_path;
  alert('Color Variables Exported!', alertMessage);
};